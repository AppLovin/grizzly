<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="filterchain-filters"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml">
  <title>FilterChain and Filters</title>
  <para>In the previous sections we mentioned <emphasis role="italic">Processor</emphasis>, and its
        role - processing I/O events occurred on Grizzly <emphasis role="italic"
            >Connection</emphasis>s. The <emphasis role="italic">FilterChain</emphasis> is the most
        useful type of <emphasis role="italic">Processor</emphasis> used in Grizzly.</para>
    <para><inlinemediaobject>
            <imageobject>
                <imagedata fileref="../images/coreframework/filterchain-diagram.svg"/>
            </imageobject>
        </inlinemediaobject></para>
    <para><emphasis role="italic">FilterChain</emphasis>, according to its name, is a chain of
            <emphasis role="italic">Filter</emphasis>s. Each <emphasis role="italic"
            >Filter</emphasis> represents a unit of processing work to be performed, whose purpose
        it to examine and/or modify the state of the transaction that is represented by a <emphasis
            role="italic">FilterChainContext</emphasis>.</para>
    <para>To give an idea how <emphasis role="italic">FilterChain</emphasis> may look like, here is
        example of <emphasis role="italic">FilterChain</emphasis>, which implements HTTP server
        logic:</para>
</section>
